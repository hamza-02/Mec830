// Define pins for direction and pulse
const int dirPin = 9;
const int pulsePin = 8;
const int limitSwitch1 = 12;
const int limitSwitch2 = 13;

// Motor and driver settings
const float stepAngle = 1.8; // Step angle of motor in degrees
const int microstepping = 1; // Microstepping setting on TB6600 (adjust if different)

// Variables to control direction and switch tracking
bool movingTowardsLimit1 = true; // Tracks which direction weâ€™re moving
bool limitSwitch1Triggered = false;
bool limitSwitch2Triggered = false;

// Function to move motor by one step in the current direction
void moveOneStep(int pulseDelay) {
  digitalWrite(pulsePin, HIGH);
  delayMicroseconds(pulseDelay);
  digitalWrite(pulsePin, LOW);
  delayMicroseconds(pulseDelay);
}

void setup() {
  // Initialize pins
  pinMode(dirPin, OUTPUT);
  pinMode(pulsePin, OUTPUT);
  pinMode(limitSwitch1, INPUT_PULLUP); // Assuming limit switches are wired as pull-up
  pinMode(limitSwitch2, INPUT_PULLUP);
  
  // Set initial direction
  digitalWrite(dirPin, HIGH); // Start moving towards limit switch 1
}

void loop() {
  // Move one step in the current direction
  moveOneStep(500); // Adjust pulse delay as needed

  // Check limit switches
  if (digitalRead(limitSwitch1) == LOW && movingTowardsLimit1 && !limitSwitch1Triggered) {
    // Limit switch 1 is triggered, change direction
    movingTowardsLimit1 = false;
    limitSwitch1Triggered = true; // Mark switch as triggered to avoid re-triggering
    limitSwitch2Triggered = false; // Reset the opposite switch trigger
    digitalWrite(dirPin, LOW); // Reverse direction
    delay(100); // Debounce delay
  } 
  else if (digitalRead(limitSwitch2) == LOW && !movingTowardsLimit1 && !limitSwitch2Triggered) {
    // Limit switch 2 is triggered, change direction
    movingTowardsLimit1 = true;
    limitSwitch2Triggered = true; // Mark switch as triggered to avoid re-triggering
    limitSwitch1Triggered = false; // Reset the opposite switch trigger
    digitalWrite(dirPin, HIGH); // Reverse direction
    delay(100); // Debounce delay
  }
}
